// generated by ts-bicycle
// do not edit by hand

import {GetOptimisticValue} from 'bicycle/client/optimistic';

export {GetOptimisticValue};

export interface RootOptimisticUpdaters {}
export interface RootCache {
  get(name: 'sessions'): void | SessionCache[];
  set(name: 'sessions', value: SessionCache[]): this;
  getObject(typeName: 'Session', id: string): SessionCache;
}
export interface SessionOptimisticUpdaters {
  deleteSession?: (
    mutation: {
      objectName: 'Session';
      methodName: 'deleteSession';
      args: number;
    },
    cache: RootCache,
    getOptimisticValue: GetOptimisticValue,
  ) => any;
}
export interface SessionCache {
  get(name: 'id'): void | number;
  get(name: 'userAgent'): void | (null | string);
  get(name: 'lastSeen'): void | string;
  set(name: 'id', value: number): this;
  set(name: 'userAgent', value: null | string): this;
  set(name: 'lastSeen', value: string): this;
}
export default interface OptimisticUpdaters {
  Root?: RootOptimisticUpdaters;
  Session?: SessionOptimisticUpdaters;
};
